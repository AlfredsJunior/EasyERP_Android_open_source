def appDependencies = rootProject.ext.appDependencies
def devDependencies = rootProject.ext.devDependencies

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.androidApplicationId
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.androidVersionCode
        versionName rootProject.ext.androidVersionName
        vectorDrawables.useSupportLibrary = true
    }

    def prop = new Properties();
    prop.load(new FileInputStream("KeystoreCredentials.properties"))

    signingConfigs {
        debug {
            keyAlias 'easyERP'
            keyPassword 'thinkmobiles'
            storeFile file('keystores/debug.jks')
            storePassword 'thinkmobiles'
        }
        release {
            keyAlias prop.getProperty("ALIAS")
            keyPassword prop.getProperty("PASSWORD_ALIAS")
            storeFile file('keystores/eerp.jks')
            storePassword prop.getProperty("PASSWORD_STORE")
        }
    }

    buildTypes {
        def packageForStetho = 'com.thinkmobiles.easyerp.debug'
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "PRODUCTION", "false"
            buildConfigField packageForStetho + '.IStethoConfigure', 'STETHO', 'new ' + packageForStetho + '.DebugStethoHelper()'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "PRODUCTION", "true"
            buildConfigField packageForStetho + '.IStethoConfigure', 'STETHO', 'new ' + packageForStetho + '.ReleaseStethoHelper()'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

//TODO DANGEROUS!!!. Please move added dependency in repository: domain/LibrariesRepository.java
dependencies {
    compile project(path: ':rangepickerdialog')

    /*Debug*/
    debugCompile devDependencies.stetho

    /*Android support*/
    compile appDependencies.androidSupportDesign
    compile appDependencies.androidSupportCardView
    compile appDependencies.androidSupportPercent

    /*Android annotations*/
    apt appDependencies.androidAnnotations
    compile appDependencies.androidAnnotationsApi

    /*Utilities*/
    compile appDependencies.recyclerAdaptersMichenko
    compile appDependencies.picasso

    /*Reactive*/
    compile appDependencies.rxJava
    compile appDependencies.rxBinding

    /*Networking*/
    compile appDependencies.retrofitGson
    compile appDependencies.retrofitAdapterRx

    /*UI*/
    compile appDependencies.mpAndroidChart
    compile appDependencies.flowLayout
    compile appDependencies.circleIndicator

    /*Analytic tools*/
    compile devDependencies.analytic
    compile(devDependencies.crashlytic) {
        transitive = true;
    }
    compile devDependencies.uxcamAnalytic
}

apply plugin: 'com.google.gms.google-services'

task switchToDebug(type: Copy) {
    description = 'Switches to DEBUG google-services.json'
    from "src/debug"
    include "google-services.json"
    into "."
}

task switchToRelease(type: Copy) {
    description = 'Switches to RELEASE google-services.json'
    from "src/main"
    include "google-services.json"
    into "."
}

tasks.whenTaskAdded { task ->
    if (task.name == 'processDebugGoogleServices') {
        task.dependsOn switchToDebug
    }
    if (task.name == 'processReleaseGoogleServices') {
        task.dependsOn switchToRelease
    }
}
//afterEvaluate {
//    processDebugGoogleServices.dependsOn switchToDebug
//    processReleaseGoogleServices.dependsOn switchToRelease
//}